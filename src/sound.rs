use crate::jni_utils::{get_env, JavaObject, JniValue};
use crate::Result;
use jni::objects::JValue;

#[derive(Debug, Clone)]
pub struct Sound {
    inner: JavaObject,
}

#[derive(Debug, Clone, Copy)]
pub enum SoundEvent {
    // Block sounds
    BlockNoteBlockBass,
    BlockAnvilBreak,
    BlockAnvilDestroy,
    BlockAnvilFall,
    BlockAnvilHit,
    BlockAnvilLand,
    BlockAnvilPlace,
    BlockAnvilStep,
    BlockAnvilUse,
    BlockAmethystBlockBreak,
    BlockAmethystBlockChime,
    BlockAmethystBlockFall,
    BlockAmethystBlockHit,
    BlockAmethystBlockPlace,
    BlockAmethystBlockResonate,
    BlockAmethystBlockStep,
    BlockBambooBreak,
    BlockBambooFall,
    BlockBambooHit,
    BlockBambooPlace,
    BlockBambooStep,
    BlockBarrelClose,
    BlockBarrelOpen,
    BlockBeaconActivate,
    BlockBeaconAmbient,
    BlockBeaconDeactivate,
    BlockBeaconPowerSelect,
    BlockBeeNestBreak,
    BlockBeeNestDrip,
    BlockBeeNestEnter,
    BlockBeeNestExit,
    BlockBeeNestWork,
    BlockBeehiveShear,
    BlockBellResonate,
    BlockBellUse,
    BlockBlastFurnaceFireCrackle,
    BlockBrewingStandBrew,
    BlockBubbleColumnBubblePop,
    BlockBubbleColumnUpwardAmbient,
    BlockBubbleColumnUpwardInside,
    BlockBubbleColumnWhirlpoolAmbient,
    BlockBubbleColumnWhirlpoolInside,
    BlockCakeAdd,
    BlockCakeAddCandle,
    BlockCampfireBreak,
    BlockCampfireCrackle,
    BlockCandleAmbient,
    BlockCandleBreak,
    BlockCandleExtinguish,
    BlockCandleFall,
    BlockCandleHit,
    BlockCandlePlace,
    BlockChainBreak,
    BlockChainFall,
    BlockChainHit,
    BlockChainPlace,
    BlockChainStep,
    BlockChestClose,
    BlockChestLocked,
    BlockChestOpen,
    BlockChiseledBookshelfBreak,
    BlockChiseledBookshelfFall,
    BlockChiseledBookshelfHit,
    BlockChiseledBookshelfInsert,
    BlockChiseledBookshelfPlace,
    BlockChiseledBookshelfStep,
    BlockChiseledBookshelfTake,
    BlockChorusFlowerDeath,
    BlockChorusFlowerGrow,
    BlockComposterEmpty,
    BlockComposterFill,
    BlockComposterFillSuccess,
    BlockComposterReady,
    BlockConduitActivate,
    BlockConduitAmbient,
    BlockConduitAttackTarget,
    BlockConduitDeactivate,
    BlockCopperBreak,
    BlockCopperFall,
    BlockCopperHit,
    BlockCopperPlace,
    BlockCopperStep,
    BlockCopperWaxOff,
    BlockCopperWaxOn,
    BlockCropBreak,
    BlockDeepslateBreak,
    BlockDeepslateFall,
    BlockDeepslateHit,
    BlockDeepslatePlace,
    BlockDeepslateStep,
    BlockDispenseDispense,
    BlockDispenseFail,
    BlockDoorClose,
    BlockDoorOpen,
    BlockDripstoneBreak,
    BlockDripstoneFall,
    BlockDripstoneHit,
    BlockDripstonePlace,
    BlockDripstoneStep,
    BlockEnchantmentTableUse,
    BlockEndGatewaySpawn,
    BlockEndPortalFrameFill,
    BlockEndPortalSpawn,
    BlockEnderChestClose,
    BlockEnderChestOpen,
    BlockFenceGateClose,
    BlockFenceGateOpen,
    BlockFireAmbient,
    BlockFireExtinguish,
    BlockFletchingTableUse,
    BlockFlowerPotBreak,
    BlockFlowerPotPlace,
    BlockFrogspawnBreak,
    BlockFrogspawnHatch,
    BlockFrogspawnStep,
    BlockFurnaceFireCrackle,
    BlockGildedBlackstoneBreak,
    BlockGildedBlackstoneFall,
    BlockGildedBlackstoneHit,
    BlockGildedBlackstonePlace,
    BlockGildedBlackstoneStep,
    BlockGlassBreak,
    BlockGlassFall,
    BlockGlassHit,
    BlockGlassPlace,
    BlockGlassStep,
    BlockGrassBreak,
    BlockGrassFall,
    BlockGrassHit,
    BlockGrassPlace,
    BlockGrassStep,
    BlockGravelBreak,
    BlockGravelFall,
    BlockGravelHit,
    BlockGravelPlace,
    BlockGravelStep,
    BlockGrindstoneUse,
    BlockHangingSignBreak,
    BlockHangingSignFall,
    BlockHangingSignHit,
    BlockHangingSignPlace,
    BlockHangingSignStep,
    BlockHoneyCakeAdd,
    BlockHoneyBlockBreak,
    BlockHoneyBlockFall,
    BlockHoneyBlockHit,
    BlockHoneyBlockPlace,
    BlockHoneyBlockSlide,
    BlockHoneyBlockStep,
    BlockLadderBreak,
    BlockLadderFall,
    BlockLadderHit,
    BlockLadderPlace,
    BlockLadderStep,
    BlockLanternBreak,
    BlockLanternFall,
    BlockLanternHit,
    BlockLanternPlace,
    BlockLanternStep,
    BlockLargeAmethystBudBreak,
    BlockLargeAmethystBudPlace,
    BlockLavaAmbient,
    BlockLavaExtinguish,
    BlockLavaPop,
    BlockLeverClick,
    BlockLilyPadPlace,
    BlockLodestoneCompassLock,
    BlockMediumAmethystBudBreak,
    BlockMediumAmethystBudPlace,
    BlockMelonBreak,
    BlockMetalBreak,
    BlockMetalFall,
    BlockMetalHit,
    BlockMetalPlace,
    BlockMetalPressurePlateClickOff,
    BlockMetalPressurePlateClickOn,
    BlockMetalStep,
    BlockMossBreak,
    BlockMossFall,
    BlockMossHit,
    BlockMossPlace,
    BlockMossStep,
    BlockMudBreak,
    BlockMudFall,
    BlockMudHit,
    BlockMudPlace,
    BlockMudStep,
    BlockMuddyMangroveRootsBreak,
    BlockMuddyMangroveRootsFall,
    BlockMuddyMangroveRootsHit,
    BlockMuddyMangroveRootsPlace,
    BlockMuddyMangroveRootsStep,
    BlockMushroomBreak,
    BlockMushroomFall,
    BlockMushroomHit,
    BlockMushroomPlace,
    BlockMushroomStep,
    BlockNetherBrickBreak,
    BlockNetherBrickFall,
    BlockNetherBrickHit,
    BlockNetherBrickPlace,
    BlockNetherBrickStep,
    BlockNetherGoldOreBreak,
    BlockNetherGoldOreFall,
    BlockNetherGoldOreHit,
    BlockNetherGoldOrePlace,
    BlockNetherGoldOreStep,
    BlockNetherOreBreak,
    BlockNetherOreFall,
    BlockNetherOreHit,
    BlockNetherOrePlace,
    BlockNetherOreStep,
    BlockNetherSproutsBreak,
    BlockNetherSproutsFall,
    BlockNetherSproutsHit,
    BlockNetherSproutsPlace,
    BlockNetherSproutsStep,
    BlockNetherWartBreak,
    BlockNetherWartPlace,
    BlockNetherrackBreak,
    BlockNetherrackFall,
    BlockNetherrackHit,
    BlockNetherrackPlace,
    BlockNetherrackStep,
    BlockNoteBlock,
    BlockNyliumBreak,
    BlockNyliumFall,
    BlockNyliumHit,
    BlockNyliumPlace,
    BlockNyliumStep,
    BlockObsidianBreak,
    BlockObsidianFall,
    BlockObsidianHit,
    BlockObsidianPlace,
    BlockObsidianStep,
    BlockPackedMudBreak,
    BlockPackedMudFall,
    BlockPackedMudHit,
    BlockPackedMudPlace,
    BlockPackedMudStep,
    BlockPistonContract,
    BlockPistonExtend,
    BlockPointedDripstoneCauldronDripLava,
    BlockPointedDripstoneCauldronDripWater,
    BlockPointedDripstoneDripLava,
    BlockPointedDripstoneDripWater,
    BlockPointedDripstoneDripWaterCauldron,
    BlockPointedDripstoneFall,
    BlockPointedDripstoneLandInCauldron,
    BlockPortalAmbient,
    BlockPortalTravel,
    BlockPortalTrigger,
    BlockPowderSnowFall,
    BlockPowderSnowHit,
    BlockPowderSnowPlace,
    BlockPumpkinCarve,
    BlockRailBreak,
    BlockRailFall,
    BlockRailHit,
    BlockRailPlace,
    BlockRailStep,
    BlockRespawnAnchorAmbient,
    BlockRespawnAnchorCharge,
    BlockRespawnAnchorDeplete,
    BlockRespawnAnchorSet,
    BlockRootedDirtBreak,
    BlockRootedDirtFall,
    BlockRootedDirtHit,
    BlockRootedDirtPlace,
    BlockRootedDirtStep,
    BlockSandBreak,
    BlockSandFall,
    BlockSandHit,
    BlockSandPlace,
    BlockSandStep,
    BlockScaffoldingBreak,
    BlockScaffoldingFall,
    BlockScaffoldingHit,
    BlockScaffoldingPlace,
    BlockScaffoldingStep,
    BlockSculkBlockCharge,
    BlockSculkBlockSpread,
    BlockSculkCatalystBloom,
    BlockSculkCatalystBreak,
    BlockSculkCatalystFall,
    BlockSculkCatalystHit,
    BlockSculkCatalystPlace,
    BlockSculkCatalystStep,
    BlockSculkSensorBreak,
    BlockSculkSensorFall,
    BlockSculkSensorHit,
    BlockSculkSensorPlace,
    BlockSculkSensorStep,
    BlockSculkShriekerBreak,
    BlockSculkShriekerFall,
    BlockSculkShriekerHit,
    BlockSculkShriekerHurt,
    BlockSculkShriekerPlace,
    BlockSculkShriekerShriek,
    BlockSculkShriekerStep,
    BlockSculkVeinBreak,
    BlockSculkVeinFall,
    BlockSculkVeinHit,
    BlockSculkVeinPlace,
    BlockSculkVeinStep,
    BlockShulkerBoxClose,
    BlockShulkerBoxOpen,
    BlockSlimeBlockBreak,
    BlockSlimeBlockFall,
    BlockSlimeBlockHit,
    BlockSlimeBlockPlace,
    BlockSlimeBlockStep,
    BlockSmallAmethystBudBreak,
    BlockSmallAmethystBudPlace,
    BlockSmallDripleafBreak,
    BlockSmallDripleafFall,
    BlockSmallDripleafHit,
    BlockSmallDripleafPlace,
    BlockSmallDripleafStep,
    BlockSmokerSmoke,
    BlockSnifferEggBreak,
    BlockSnifferEggCrack,
    BlockSnifferEggHatch,
    BlockSnifferEggHit,
    BlockSnifferEggPlace,
    BlockSnifferEggStep,
    BlockSnowBreak,
    BlockSnowFall,
    BlockSnowHit,
    BlockSnowPlace,
    BlockSnowStep,
    BlockSoulSandBreak,
    BlockSoulSandFall,
    BlockSoulSandHit,
    BlockSoulSandPlace,
    BlockSoulSandStep,
    BlockSoulSoilBreak,
    BlockSoulSoilFall,
    BlockSoulSoilHit,
    BlockSoulSoilPlace,
    BlockSoulSoilStep,
    BlockSporeBlossomBreak,
    BlockSporeBlossomFall,
    BlockSporeBlossomHit,
    BlockSporeBlossomPlace,
    BlockSporeBlossomStep,
    BlockStemBreak,
    BlockStemFall,
    BlockStemHit,
    BlockStemPlace,
    BlockStemStep,
    BlockStoneBreak,
    BlockStoneFall,
    BlockStoneHit,
    BlockStonePlace,
    BlockStoneStep,
    BlockStonePressurePlateClickOff,
    BlockStonePressurePlateClickOn,
    BlockStonecutterUse,
    BlockSuspiciousSandBreak,
    BlockSuspiciousSandFall,
    BlockSuspiciousSandHit,
    BlockSuspiciousSandPlace,
    BlockSuspiciousSandStep,
    BlockSweetBerryBushBreak,
    BlockSweetBerryBushHurt,
    BlockSweetBerryBushPick,
    BlockSweetBerryBushPlace,
    BlockTntBreak,
    BlockTntFall,
    BlockTntHit,
    BlockTntPlace,
    BlockTntStep,
    BlockTripwireAttach,
    BlockTripwireClickOff,
    BlockTripwireClickOn,
    BlockTripwireDetach,
    BlockVerdantFroglightBreak,
    BlockVerdantFroglightFall,
    BlockVerdantFroglightHit,
    BlockVerdantFroglightPlace,
    BlockVerdantFroglightStep,
    BlockVineBreak,
    BlockVineFall,
    BlockVineHit,
    BlockVinePlace,
    BlockVineStep,
    BlockWaterAmbient,
    BlockWetGrassBreak,
    BlockWetGrassFall,
    BlockWetGrassHit,
    BlockWetGrassPlace,
    BlockWetGrassStep,
    BlockWoodBreak,
    BlockWoodFall,
    BlockWoodHit,
    BlockWoodPlace,
    BlockWoodStep,
    BlockWoodPressurePlateClickOff,
    BlockWoodPressurePlateClickOn,
    BlockWoolBreak,
    BlockWoolFall,
    BlockWoolHit,
    BlockWoolPlace,
    BlockWoolStep,
    // ... and many more events
}

#[derive(Debug, Clone, Copy)]
pub enum Source {
    Ambient,
    Block,
    Hostile,
    Master,
    Music,
    Neutral,
    Player,
    Record,
    Voice,
    Weather,
}

impl Sound {
    pub fn sound(event: SoundEvent, source: Source, volume: f32, pitch: f32) -> Result<Self> {
        let mut env = get_env()?;

        // Get the Sound class
        let sound_class = env.find_class("net/kyori/adventure/sound/Sound")?;

        // Create Key from SoundEvent
        let key_class = env.find_class("net/kyori/adventure/key/Key")?;
        let namespace = "minecraft";
        let value = event.to_key_value();

        let j_namespace = env.new_string(namespace)?;
        let j_value = env.new_string(value)?;

        let key = env
            .call_static_method(
                key_class,
                "key",
                "(Ljava/lang/String;Ljava/lang/String;)Lnet/kyori/adventure/key/Key;",
                &[JValue::Object(&j_namespace), JValue::Object(&j_value)],
            )?
            .l()?;

        // Get the Source enum value
        let source_class = env.find_class("net/kyori/adventure/sound/Sound$Source")?;
        let source_obj = env
            .get_static_field(
                source_class,
                source.to_java_name(),
                "Lnet/kyori/adventure/sound/Sound$Source;",
            )?
            .l()?;

        // Create the Sound object using the correct signature
        let sound_obj = env.call_static_method(
            sound_class,
            "sound",
            "(Lnet/kyori/adventure/key/Key;Lnet/kyori/adventure/sound/Sound$Source;FF)Lnet/kyori/adventure/sound/Sound;",
            &[
                JValue::Object(&key),
                JValue::Object(&source_obj),
                JValue::Float(volume),
                JValue::Float(pitch),
            ],
        )?.l()?;

        Ok(Self {
            inner: JavaObject::from_env(&mut env, sound_obj)?,
        })
    }

    pub(crate) fn as_jvalue<'local>(
        &self,
        env: &mut jni::JNIEnv<'local>,
    ) -> Result<JniValue<'local>> {
        let obj = self.inner.as_obj()?;
        Ok(JniValue::Object(env.new_local_ref(&obj)?))
    }
}

impl SoundEvent {
    fn to_java_name(&self) -> &'static str {
        match self {
            // Block sounds
            SoundEvent::BlockNoteBlockBass => "BLOCK_NOTE_BLOCK_BASS",
            SoundEvent::BlockAnvilBreak => "BLOCK_ANVIL_BREAK",
            SoundEvent::BlockAnvilDestroy => "BLOCK_ANVIL_DESTROY",
            SoundEvent::BlockAnvilFall => "BLOCK_ANVIL_FALL",
            SoundEvent::BlockAnvilHit => "BLOCK_ANVIL_HIT",
            SoundEvent::BlockAnvilLand => "BLOCK_ANVIL_LAND",
            SoundEvent::BlockAnvilPlace => "BLOCK_ANVIL_PLACE",
            SoundEvent::BlockAnvilStep => "BLOCK_ANVIL_STEP",
            SoundEvent::BlockAnvilUse => "BLOCK_ANVIL_USE",
            SoundEvent::BlockAmethystBlockBreak => "BLOCK_AMETHYST_BLOCK_BREAK",
            SoundEvent::BlockAmethystBlockChime => "BLOCK_AMETHYST_BLOCK_CHIME",
            SoundEvent::BlockAmethystBlockFall => "BLOCK_AMETHYST_BLOCK_FALL",
            SoundEvent::BlockAmethystBlockHit => "BLOCK_AMETHYST_BLOCK_HIT",
            SoundEvent::BlockAmethystBlockPlace => "BLOCK_AMETHYST_BLOCK_PLACE",
            SoundEvent::BlockAmethystBlockResonate => "BLOCK_AMETHYST_BLOCK_RESONATE",
            SoundEvent::BlockAmethystBlockStep => "BLOCK_AMETHYST_BLOCK_STEP",
            SoundEvent::BlockBambooBreak => "BLOCK_BAMBOO_BREAK",
            SoundEvent::BlockBambooFall => "BLOCK_BAMBOO_FALL",
            SoundEvent::BlockBambooHit => "BLOCK_BAMBOO_HIT",
            SoundEvent::BlockBambooPlace => "BLOCK_BAMBOO_PLACE",
            SoundEvent::BlockBambooStep => "BLOCK_BAMBOO_STEP",
            SoundEvent::BlockBarrelClose => "BLOCK_BARREL_CLOSE",
            SoundEvent::BlockBarrelOpen => "BLOCK_BARREL_OPEN",
            SoundEvent::BlockBeaconActivate => "BLOCK_BEACON_ACTIVATE",
            SoundEvent::BlockBeaconAmbient => "BLOCK_BEACON_AMBIENT",
            SoundEvent::BlockBeaconDeactivate => "BLOCK_BEACON_DEACTIVATE",
            SoundEvent::BlockBeaconPowerSelect => "BLOCK_BEACON_POWER_SELECT",
            // ... and so on for all other variants
            _ => "BLOCK_NOTE_BLOCK_BASS", // Default fallback for unmatched variants
        }
    }

    fn to_key_value(&self) -> &'static str {
        match self {
            // Block sounds
            SoundEvent::BlockNoteBlockBass => "block.note_block.bass",
            SoundEvent::BlockAnvilBreak => "block.anvil.break",
            SoundEvent::BlockAnvilDestroy => "block.anvil.destroy",
            SoundEvent::BlockAnvilFall => "block.anvil.fall",
            SoundEvent::BlockAnvilHit => "block.anvil.hit",
            SoundEvent::BlockAnvilLand => "block.anvil.land",
            SoundEvent::BlockAnvilPlace => "block.anvil.place",
            SoundEvent::BlockAnvilStep => "block.anvil.step",
            SoundEvent::BlockAnvilUse => "block.anvil.use",
            SoundEvent::BlockAmethystBlockBreak => "block.amethyst_block.break",
            SoundEvent::BlockAmethystBlockChime => "block.amethyst_block.chime",
            SoundEvent::BlockAmethystBlockFall => "block.amethyst_block.fall",
            SoundEvent::BlockAmethystBlockHit => "block.amethyst_block.hit",
            SoundEvent::BlockAmethystBlockPlace => "block.amethyst_block.place",
            SoundEvent::BlockAmethystBlockResonate => "block.amethyst_block.resonate",
            SoundEvent::BlockAmethystBlockStep => "block.amethyst_block.step",
            SoundEvent::BlockBambooBreak => "block.bamboo.break",
            SoundEvent::BlockBambooFall => "block.bamboo.fall",
            SoundEvent::BlockBambooHit => "block.bamboo.hit",
            SoundEvent::BlockBambooPlace => "block.bamboo.place",
            SoundEvent::BlockBambooStep => "block.bamboo.step",
            SoundEvent::BlockBarrelClose => "block.barrel.close",
            SoundEvent::BlockBarrelOpen => "block.barrel.open",
            SoundEvent::BlockBeaconActivate => "block.beacon.activate",
            SoundEvent::BlockBeaconAmbient => "block.beacon.ambient",
            SoundEvent::BlockBeaconDeactivate => "block.beacon.deactivate",
            SoundEvent::BlockBeaconPowerSelect => "block.beacon.power_select",
            // ... and so on for all other variants
            _ => "block.note_block.bass", // Default to bass sound if no match
        }
    }
}

impl Source {
    fn to_java_name(&self) -> &'static str {
        match self {
            Source::Ambient => "AMBIENT",
            Source::Block => "BLOCK",
            Source::Hostile => "HOSTILE",
            Source::Master => "MASTER",
            Source::Music => "MUSIC",
            Source::Neutral => "NEUTRAL",
            Source::Player => "PLAYER",
            Source::Record => "RECORD",
            Source::Voice => "VOICE",
            Source::Weather => "WEATHER",
        }
    }
}
